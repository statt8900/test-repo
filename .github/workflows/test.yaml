name: Python tests

env:
  # enable colored output
  # https://github.com/pytest-dev/pytest/issues/7443
  PY_COLORS: 1

on:
  pull_request:
    paths:
      - .github/workflows/tests.yaml
      - "**/*.py"
      - poetry.lock
      - pyproject.toml
      - Dockerfile
  push:
    branches:
      - master

permissions:
  contents: read

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  run-tests:
    runs-on: ubuntu-20.04
    name: Run Pytest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
          cache: "pip"
          cache-dependency-path: "requirements*.txt"
      - uses: actions/cache@v2
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('poetry.lock') }}-root
      - name: Install poetry
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          python -m pip install "poetry==1.2.1"
      - name: Configure poetry
        run: python -m poetry config virtualenvs.create false
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: python -m poetry install
      - name: Test
        run: |
          export PYTHONPATH=$PWD/src:$PYTHONPATH
          python -m poetry run bash scripts/ci/test.sh
      - name: Display coverage
        uses: ewjoachim/coverage-comment-action@v1
        with:
          GITHUB_TOKEN: ${{ github.token }}
          # Path and filename of the coverage XML file to analyze.
          COVERAGE_FILE: "coverage.xml"
          # Whether or not a badge will be generated and stored.
          BADGE_ENABLED: "true"
          # Name of the json file containing badge informations stored in the repo wiki.
          BADGE_FILENAME: coverage-comment-badge.json
          # If the coverage percentage is above or equal to this value, the badge will be green.
          MINIMUM_GREEN: 100
          # Same with orange. Below is red.
          MINIMUM_ORANGE: 70
          # [Advanced] Specify a different template for the comments that will be written on the PR.
          COMMENT_TEMPLATE: ""
          # [Advanced] Additional args to pass to diff cover (one per line)
          DIFF_COVER_ARGS: ""
